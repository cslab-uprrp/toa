#!/usr/bin/python

####### imports #########

import os
import cgi
import datetime
import re
import sys
import cgitb
sys.path.append("../Models")
from UserModel import UserModel
from SessionModel import SessionModel

###### imports #########

print """Content-Type: text/html"""
#print ""
#print ""

cgitb.enable()

#### Getting the values of the Login Form ######

form = cgi.FieldStorage()#get the form itself

if form.has_key("username"):

	user = form.getvalue("username")#get the value of the input with name 'user'

else:

	user = ""

if form.has_key("password"):

	pasw = form.getvalue("password")#get the value of the input with name 'passwd'

else:

	pasw = ""

iden = sid = remote = 0

#### End of getting the values of the Login Form ############

#### DataBase Info and connection####### (We must simplify this)

UserModel = UserModel()

SessionModel = SessionModel()

validator = [re.compile('([a-zA-Z0-9]|\.|_|-|\+|$)+@[a-zA-Z0-9]+(\.[a-zA-Z]+)+$'), re.compile('.*(?=.{8,})(?=.*[a-zA-Z])(?=.*\d)(?=.*[!#$%&?\* "]).*$')]

###### End of DataBase Info and Connection #######

###### New Validation ###### 
#print user
#print pasw

#print  UserModel.connect()
#print SessionModel.connect()
#print validator[0].match(user)
#print validator[1].match(pasw)

if UserModel.connect() and SessionModel.connect() and validator[0].match(user) and validator[1].match(pasw):

	valid = UserModel.Get(user, pasw)

else:

	valid = 0

if valid:

	iden = valid

	sid = os.getenv("UNIQUE_ID")#get the session id that is going to be a Unique id generated by the system(Unix)

	now = datetime.datetime.now()#generate the TimeStamp

	date = str(now.minute)#converting the TimeStamp to string 	

	remote = os.getenv("REMOTE_ADDR");

	SessionModel.Create(iden, sid, date, remote)

	print("Location:../Views/AdminViews/Dashboard.cgi?uid=%s&sid=%s&remote=%s")%(iden,sid, remote)

	print

else:

	print("Location:../index.cgi?validation=1")

	print

###### New Validation ######

del UserModel

del SessionModel

